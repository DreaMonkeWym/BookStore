package com.wym.mapper;

import com.wym.model.BookDetail;
import com.wym.model.BookDetailExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface BookDetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @SelectProvider(type=BookDetailSqlProvider.class, method="countByExample")
    long countByExample(BookDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @DeleteProvider(type=BookDetailSqlProvider.class, method="deleteByExample")
    int deleteByExample(BookDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @Delete({
        "delete from bookdetail",
        "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String bookid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @Insert({
        "insert into bookdetail (bookid, typeid, ",
        "avatar, descri, ",
        "isbn, price, quantity, ",
        "publicationtime, author, ",
        "soldout, glance, ",
        "bookname)",
        "values (#{bookid,jdbcType=VARCHAR}, #{typeid,jdbcType=VARCHAR}, ",
        "#{avatar,jdbcType=VARCHAR}, #{descri,jdbcType=VARCHAR}, ",
        "#{isbn,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{quantity,jdbcType=VARCHAR}, ",
        "#{publicationtime,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, ",
        "#{soldout,jdbcType=VARCHAR}, #{glance,jdbcType=VARCHAR}, ",
        "#{bookname,jdbcType=VARCHAR})"
    })
    int insert(BookDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @InsertProvider(type=BookDetailSqlProvider.class, method="insertSelective")
    int insertSelective(BookDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @SelectProvider(type=BookDetailSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="typeid", property="typeid", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="descri", property="descri", jdbcType=JdbcType.VARCHAR),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.VARCHAR),
        @Result(column="publicationtime", property="publicationtime", jdbcType=JdbcType.VARCHAR),
        @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
        @Result(column="soldout", property="soldout", jdbcType=JdbcType.VARCHAR),
        @Result(column="glance", property="glance", jdbcType=JdbcType.VARCHAR),
        @Result(column="bookname", property="bookname", jdbcType=JdbcType.VARCHAR)
    })
    List<BookDetail> selectByExample(BookDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @Select({
        "select",
        "bookid, typeid, avatar, descri, isbn, price, quantity, publicationtime, author, ",
        "soldout, glance, bookname",
        "from bookdetail",
        "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="typeid", property="typeid", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="descri", property="descri", jdbcType=JdbcType.VARCHAR),
        @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.VARCHAR),
        @Result(column="publicationtime", property="publicationtime", jdbcType=JdbcType.VARCHAR),
        @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
        @Result(column="soldout", property="soldout", jdbcType=JdbcType.VARCHAR),
        @Result(column="glance", property="glance", jdbcType=JdbcType.VARCHAR),
        @Result(column="bookname", property="bookname", jdbcType=JdbcType.VARCHAR)
    })
    BookDetail selectByPrimaryKey(String bookid);

    @Select({
            "select",
            "bookid, typeid, avatar, descri, isbn, price, quantity, publicationtime, author, ",
            "soldout, glance, bookname",
            "from bookdetail",
            "where isbn = #{isbn,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="typeid", property="typeid", jdbcType=JdbcType.VARCHAR),
            @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
            @Result(column="descri", property="descri", jdbcType=JdbcType.VARCHAR),
            @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
            @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
            @Result(column="quantity", property="quantity", jdbcType=JdbcType.VARCHAR),
            @Result(column="publicationtime", property="publicationtime", jdbcType=JdbcType.VARCHAR),
            @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
            @Result(column="soldout", property="soldout", jdbcType=JdbcType.VARCHAR),
            @Result(column="glance", property="glance", jdbcType=JdbcType.VARCHAR),
            @Result(column="bookname", property="bookname", jdbcType=JdbcType.VARCHAR)
    })
    BookDetail selectBookISBN(String isbn);

    @Select({
            "select",
            "bookid, typeid, avatar, descri, isbn, price, quantity, publicationtime, author, ",
            "soldout, glance, bookname",
            "from bookdetail",
            "where typeid = #{typeid,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="typeid", property="typeid", jdbcType=JdbcType.VARCHAR),
            @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
            @Result(column="descri", property="descri", jdbcType=JdbcType.VARCHAR),
            @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
            @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
            @Result(column="quantity", property="quantity", jdbcType=JdbcType.VARCHAR),
            @Result(column="publicationtime", property="publicationtime", jdbcType=JdbcType.VARCHAR),
            @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
            @Result(column="soldout", property="soldout", jdbcType=JdbcType.VARCHAR),
            @Result(column="glance", property="glance", jdbcType=JdbcType.VARCHAR),
            @Result(column="bookname", property="bookname", jdbcType=JdbcType.VARCHAR)
    })
    List<BookDetail> queryBookByType(String typeId);

    @Select({
            "select",
            "bookid, typeid, avatar, descri, isbn, price, quantity, publicationtime, author, ",
            "soldout, glance, bookname",
            "from bookdetail",
            "where bookname LIKE CONCAT('%',#{bookname,jdbcType=VARCHAR},'%')"
    })
    @Results({
            @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="typeid", property="typeid", jdbcType=JdbcType.VARCHAR),
            @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
            @Result(column="descri", property="descri", jdbcType=JdbcType.VARCHAR),
            @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
            @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
            @Result(column="quantity", property="quantity", jdbcType=JdbcType.VARCHAR),
            @Result(column="publicationtime", property="publicationtime", jdbcType=JdbcType.VARCHAR),
            @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
            @Result(column="soldout", property="soldout", jdbcType=JdbcType.VARCHAR),
            @Result(column="glance", property="glance", jdbcType=JdbcType.VARCHAR),
            @Result(column="bookname", property="bookname", jdbcType=JdbcType.VARCHAR)
    })
    List<BookDetail> queryBookByName(String bookname);

    @Select({
            "select",
            "bookid, typeid, avatar, descri, isbn, price, quantity, publicationtime, author, ",
            "soldout, glance, bookname",
            "from bookdetail order by soldout+0 desc limit 8"
    })
    @Results({
            @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="typeid", property="typeid", jdbcType=JdbcType.VARCHAR),
            @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
            @Result(column="descri", property="descri", jdbcType=JdbcType.VARCHAR),
            @Result(column="isbn", property="isbn", jdbcType=JdbcType.VARCHAR),
            @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
            @Result(column="quantity", property="quantity", jdbcType=JdbcType.VARCHAR),
            @Result(column="publicationtime", property="publicationtime", jdbcType=JdbcType.VARCHAR),
            @Result(column="author", property="author", jdbcType=JdbcType.VARCHAR),
            @Result(column="soldout", property="soldout", jdbcType=JdbcType.VARCHAR),
            @Result(column="glance", property="glance", jdbcType=JdbcType.VARCHAR),
            @Result(column="bookname", property="bookname", jdbcType=JdbcType.VARCHAR)
    })
    List<BookDetail> queryOrderSold();
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @UpdateProvider(type=BookDetailSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BookDetail record, @Param("example") BookDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @UpdateProvider(type=BookDetailSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BookDetail record, @Param("example") BookDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @UpdateProvider(type=BookDetailSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BookDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bookdetail
     *
     * @mbg.generated Fri Mar 22 19:47:18 CST 2019
     */
    @Update({
        "update bookdetail",
        "set typeid = #{typeid,jdbcType=VARCHAR},",
          "avatar = #{avatar,jdbcType=VARCHAR},",
          "descri = #{descri,jdbcType=VARCHAR},",
          "isbn = #{isbn,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=VARCHAR},",
          "quantity = #{quantity,jdbcType=VARCHAR},",
          "publicationtime = #{publicationtime,jdbcType=VARCHAR},",
          "author = #{author,jdbcType=VARCHAR},",
          "soldout = #{soldout,jdbcType=VARCHAR},",
          "glance = #{glance,jdbcType=VARCHAR},",
          "bookname = #{bookname,jdbcType=VARCHAR}",
        "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(BookDetail record);

    @Update({
            "update bookdetail",
            "set glance = #{glance,jdbcType=VARCHAR}",
            "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    int updateGlance(String bookid, String glance);

    @Update({
            "update bookdetail",
            "set price = #{price,jdbcType=VARCHAR},",
            "quantity = #{quantity,jdbcType=VARCHAR}",
            "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    int updateBook(String bookid, String price, String quantity);

    @Update({
            "update bookdetail",
            "set quantity = #{quantity,jdbcType=VARCHAR},",
            "soldout = #{soldout,jdbcType=VARCHAR}",
            "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    int updateQuantity(String bookid, String quantity, String soldout);
}