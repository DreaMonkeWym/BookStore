package com.wym.mapper;

import com.wym.model.Comment;
import com.wym.model.CommentExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @SelectProvider(type=CommentSqlProvider.class, method="countByExample")
    long countByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @DeleteProvider(type=CommentSqlProvider.class, method="deleteByExample")
    int deleteByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @Delete({
        "delete from comment",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String commentid);

    @Delete({
            "delete from comment",
            "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    int deleteByBookId(String bookid);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @Insert({
        "insert into comment (commentid, bookid, ",
        "content, username)",
        "values (#{commentid,jdbcType=VARCHAR}, #{bookid,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR})"
    })
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @InsertProvider(type=CommentSqlProvider.class, method="insertSelective")
    int insertSelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @SelectProvider(type=CommentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR)
    })
    List<Comment> selectByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @Select({
        "select",
        "commentid, bookid, content, username",
        "from comment",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR)
    })
    Comment selectByPrimaryKey(String commentid);

    @Select({
            "select",
            "commentid, bookid, content, username",
            "from comment",
            "where bookid = #{bookid,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="bookid", property="bookid", jdbcType=JdbcType.VARCHAR),
            @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
            @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR)
    })
    List<Comment> selectByBookId(String bookid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Mar 19 12:15:33 CST 2019
     */
    @Update({
        "update comment",
        "set bookid = #{bookid,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "username = #{username,jdbcType=VARCHAR}",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Comment record);
}